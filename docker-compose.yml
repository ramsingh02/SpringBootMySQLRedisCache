version: "3.8"

services:
  mysql-redis-db:
    image: ramsinghnagarro/springboot-mysql-redis-webservices:43568ed
    container_name: mysql-redis-db
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD="$MYSQL_ROOT_PASSWORD"
      - MYSQL_USER="$MYSQL_USER"
    ports:
      - "3306:3306"
    restart: always
    networks:
      springboot-mysql-redis-net:
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
      interval: 3s

  redis-cache-db:
    image: ramsinghnagarro/springboot-mysql-redis-webservices:43568ed
    container_name: redis-cache-db
    env_file: ./.env
    ports:
      - "6379:6379"
    restart: always
    networks:
      springboot-mysql-redis-net:
    healthcheck:
      test: [ "CMD", "redis-cli" ,"ping" ]
      timeout: 20s
      retries: 10
      interval: 3s

  springboot-mysql-redis-webservices:
    container_name: springboot-mysql-redis-webservices-app
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mysql-redis-db
        #condition: service_healthy
      - redis-cache-db
        #condition: service_healthy
    networks:
      springboot-mysql-redis-net:
    restart: on-failure
    env_file: ./.env
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-redis-db:3306/$MYSQL_DB_NAME?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: $MYSQL_ROOT_USERNAME
      SPRING_DATASOURCE_PASSWORD: $MYSQL_ROOT_PASSWORD
      REDIS_HOSTNAME: redis-cache-db
      REDIS_PORT: $REDIS_PORT

networks:
  springboot-mysql-redis-net: